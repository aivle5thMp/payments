server:
  port: 8086

spring:
  application:
    name: payments
---

spring:
  profiles: default
  datasource:
    url: jdbc:h2:mem:paymentsdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    driver-class-name: org.h2.Driver
    username: sa
    password: 1234
  h2:
    console:
      enabled: true
      path: /h2-console
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        implicit_naming_strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl
  cloud:
    stream:
      kafka:
        binder:
          brokers: localhost:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: payments
          destination: mp
          contentType: application/json
        event-out:
          destination: mp
          contentType: application/json
        points-out:
          destination: payment.points.v1
          contentType: application/json
        subscription-out:
          destination: payment.subscription.success
          contentType: application/json

logging:
  level:
    org.hibernate.type: trace
    org.springframework.cloud: debug

api:
  url: 
    payments: localhost:8086
    

server:
  port: 8086

---

spring:
  profiles: docker
  application:
    name: payments
  datasource:
    url: jdbc:h2:mem:paymentsdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    driver-class-name: org.h2.Driver
    username: sa
    password: 1234
  h2:
    console:
      enabled: true
      path: /h2-console
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        implicit_naming_strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl
  cloud:
    stream:
      kafka:
        binder:
          brokers: my-kafka:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        points-out:
          destination: payment.points.v1
          contentType: application/json
        subscription-out:
          destination: payment.subscription.v1
          contentType: application/json

logging:
  level:
    org.hibernate.type: trace
    org.springframework.cloud: debug

server:
  port: 8086

api:
  url: 
    payments: http://gateway:8089